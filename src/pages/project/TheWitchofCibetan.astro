---
import Layout from "../../layouts/Layout.astro";

import HeaderSmall from "../../components/HeaderSmall.astro";
import Video from "../../components/Video.astro";
import Heading from "../../components/Heading.astro";
import ProjectDetail from "../../components/ProjectDetail.astro";

const title = "The Witch of Cibetan";
const image = "https://app.videas.fr/embed/media/6fc06e53-f1ff-4bda-80e9-40ecfb403188/?title=false&logo=false&thumbnail_duration=false&controls=false&autoplay=true&loop=true";
const about = "This project was inspired by the Sokpop game Hoco Poco, which uses spells to knock enemies off the platform. The game also features a card system in which the player can freely combine elements to create synthesis spells. Every element combination results in different spells with different effects. Use the spell wisely and become the greatest witch!​";
const role = "Gameplay Programmer, Game Designer";
const teamSize = "1";
const timeFrame = "3 months";
const engine = "Unity";
---

<Layout title="The Witch of Cibetan">
  <div>
    <ProjectDetail title ={title} image ={image} about={about} role={role} teamSize={teamSize} timeFrame={timeFrame} engine={engine}
    />
  </div>
  <main>
    <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl">
      Project Links</h1>
      <div class=" flex text-gray-900 space-x-8">
        <p class="mt-2 py-8">
          <a href="https://eisto123.itch.io/the-witch-game" class="text-red-400 font-bold hover:underline">
            itch.io Page
          </a>
        </p>
        <p class="mt-2 py-8">
          <a href="https://github.com/Eisto123/The-Witch-of-Cibetan" class="text-red-400 font-bold hover:underline">
            GitHub Repository
          </a>
        </p>
      </div>


    <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl">
      Feature</h1>
  <div class="items-center py-2 px-4 mx-auto max-w-screen-xl xl:gap-8 md:grid md:grid-cols-2 sm:py-4 lg:px-6 rounded-lg ">
      <div class="max-w-3xl mx-auto text-gray-900 p-6">
          <p class="mt-2 p-1">
            <strong>Card system</strong> - Full card interaction with juicy feedback.
          </p>
          <p class="mt-2 p-1">
            <strong>Enemy</strong> - Finite state machine on enemy AI.
          </p>
          <p class="mt-2 p-1">
            <strong>Terrain</strong> - Procedurally generated and destructible.
          </p>
          <p class="mt-2 p-1">
            <strong>Spell</strong> - Six unique spells, synthesis through element cards.
          </p>
          <p class="mt-2 p-1">
            <strong>Casting</strong> - Three different spell canvases for different spell.
          </p>
          <p class="mt-2 p-1">
            <strong>VFX/SFX</strong> - Programmed perfectly to play along with casting spell.
          </p>
      </div>
      <Video youtube="https://www.youtube.com/embed/pchpLZZUKr8?si=12CcPgunA8CB0iAX"/>
    </div>
    
        <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl pb-6">
          Technical Overview</h1>
        <div class="mx-auto text-gray-900 px-1">
          
          <h2 class="text-2xl">Card System Overview</h2>
          <p>The spell-casting process involves multiple managers and follows a structured event flow. The <strong>CardManager</strong> handles cube pickups, recognizes element types, and instantiates cards into the <strong>CardDeck</strong>. Cards reference Scriptable Objects (SO) defining their image, type, and name.</p>

          <img src="https://i.ibb.co/xqF6ZtL0/1739117648022.png" alt="technical flow chart" class="rounded-lg place-self-center object-cover pb-8">

          
          <h2 class="text-2xl">Card Interactions</h2>
          <p class="mt-2 pb-2">
            Cards inherit from a base <strong>Card</strong> class that supports dragging, hovering, and clicking. Element cards cannot be dragged. Clicking an element card triggers the <strong>SynthesisManager</strong>, which, upon selecting two cards, synthesizes a spell card and adds it to the deck. Spell cards, unlike element cards, are draggable.
          </p>
          <div class="flex flex-col md:flex-row justify-center gap-4 items-stretch pb-8">
            <img src="https://i.ibb.co/qYT4QSVM/1739118695517.png" alt="elementCard" class="rounded-lg place-self-center object-cover h-128">
            <img src="https://i.ibb.co/Ndj00Tn3/1739117766459.png" alt="spell Card" class="rounded-lg place-self-center object-cover h-128">
            <img src="https://i.ibb.co/99Sr5Mt5/1739117872514.png" alt="Synthesis" class="rounded-lg place-self-center object-cover h-128">
          </div>
          
          
          <h2 class="text-2xl">Spell Casting Process</h2>
          <p class="mt-2 pb-2">
            Dragging a spell card to a certain height triggers the <strong>CastSpellEvent</strong>, handled by the <strong>CastSpellManager</strong>. Depending on the spell type (Skill Shot, Range Skill, Self Skill), a corresponding skill indicator appears. Releasing the mouse spawns the spell prefab at the cursor’s position.
          </p>
          <img src="https://i.ibb.co/G4RhNGcT/1739118816718.png" alt="skillshot" class="rounded-lg place-self-center object-cover pb-8">
          
          <h2 class="text-2xl">Enemy Interaction</h2>
          <p class="mt-2 pb-2">
            Spells interact with enemies’ <strong>RigidBody</strong>, stunning them and applying force based on spell power. Enemies move using <code>AddForce</code> and inherit from a base <strong>Enemy</strong> class that handles stun, pushback, and player attacks. Boss enemies use a state machine with three phases: <strong>Dashing</strong> (quick attack), <strong>Slaying</strong> (continuous melee), and <strong>Shooting</strong> (ranged attacks).
          </p>
          <img src="https://i.ibb.co/MyPKn29g/1739118956316.png" alt="slay stage" class="rounded-lg place-self-center object-cover pb-8">
        

          <h2 class="text-2xl">Player Feedback</h2>
          <p class="mt-2 pb-2">
            Spells feature particle effects, screen shake, and sound effects to enhance impact. The goal is to provide instant and dramatic feedback for an engaging experience.
          </p>
          <div class="flex flex-col md:flex-row justify-center gap-4 pb-8">
            <img src="https://i.ibb.co/xtVrv9b0/The-witch-of-cibetan-storm.gif" alt="elementCard" class="rounded-lg place-self-center object-cover h-max">
            <img src="https://i.ibb.co/4Rs4YYq7/The-witch-of-cibetan-fireball.gif" alt="spell Card" class="rounded-lg place-self-center object-cover h-max">
          </div>
        </div>


        <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl pb-6">
          What I Learn
      </h1>
      <div class="mx-auto text-gray-900 pb-16 px-1">
          <p class="mt-2">
              Through this project, I gained hands-on experience in designing and implementing a card-based spell-casting system. 
              This involved working with <strong>event-driven architecture</strong>, where multiple managers controlled interactions such as pickup, synthesis, 
              and spell execution.
          </p>
          <p class="mt-2">
              I improved my skills in game physics and interaction design by developing spells that stun, push, and affect enemy movement. 
              Along the Unity's Rigidbody system, I ensured responsive feedback with <strong>screen shake, particle effects, and sound design</strong> to add juice.
          </p>
          <p class="mt-2">
              Additionally, I worked on <strong>AI behavior</strong> by implementing a <strong>boss state machine</strong> with dashing, slaying, and shooting phases. 
              This required careful balancing to create engaging and dynamic encounters.
          </p>
          <p class="mt-2">
              Playtesting played a crucial role in refining mechanics. I learned how to gather and analyze player feedback to improve usability, 
              such as adjusting <strong>card deck layout</strong> and <strong>adding tutorial prompts</strong> to make the synthesis process more intuitive.
          </p>
          <p class="mt-2">
              Lastly, this project reinforced the importance of <strong>iterative development</strong> and <strong>problem-solving</strong>. I tackled issues like inconsistent force application 
              and refined gameplay flow through multiple revisions, ensuring a polished final product.
          </p>
      </div>

  </main>
</Layout>

<style></style>
