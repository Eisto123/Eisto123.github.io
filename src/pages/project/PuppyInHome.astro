---
import Layout from "../../layouts/Layout.astro"
import Video from "../../components/Video.astro";
import ProjectDetail from "../../components/ProjectDetail.astro";

const title = "Puppy In Home";
const subtitle = "An VR project runs on Meta Quest";


const image = "https://www.youtube.com/embed/pFkUwKl8AxM?si=A7GADP15ohoIIPr0&amp;controls=0";
const about = "Puppy in Home is a virtual reality (VR) game that blends puzzle solving with emotional storytelling, wherein players unlock pathways that lead into a maze resembling scenes from a typical home. Players reveal fragments of everyday life at each rotation and gradually uncover the final mystery.â€‹";
const role = "Gameplay Programmer";
const teamSize = "5";
const timeFrame = "3 months";
const engine = "Unity";
---

<Layout title="Puppy In Home">
  <div>
    <ProjectDetail title ={title} image ={image} about={about} role={role} teamSize={teamSize} timeFrame={timeFrame} engine={engine}
    />
  </div>

  
  <main class="bg-gray-100">
    <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl">
      Project Links</h1>
      <p class="mt-2 py-8">
        <a href="https://github.com/Eisto123/MazeBall_VR" class="text-red-400 font-bold hover:underline">
          GitHub Repository
        </a>
        
      </p>

    <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl">
      Feature</h1>
      <div class="items-center py-2 px-4 mx-auto max-w-screen-xl xl:gap-8 md:grid md:grid-cols-2 sm:py-4 lg:px-6 rounded-lg ">
        <div class="max-w-3xl mx-auto text-gray-900 p-6">
          <p class="mt-2 p-1"><strong>Maze Ball</strong> - A full mechanical replica of the classic Maze Ball, brought to life in VR</p>
          <p class="mt-2 p-1"><strong>Narrative</strong> - A heartwarming story about the bond between a puppy and its owner</p>
          <p class="mt-2 p-1"><strong>Toon Shader</strong> - A stylised, cartoon-inspired visual aesthetic</p>
          <p class="mt-2 p-1"><strong>Level Design</strong> - Thoughtfully crafted puzzles and intuitive visual navigation</p>
        </div>
        
          <Video youtube="https://www.youtube.com/embed/fzAcLzuCGBQ?si=tFotIjmBjzkxKOiq"/>
          
        </div>

        <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl pb-6">
          Technical Overview</h1>
        <div class="mx-auto text-gray-900 px-1">
          
          <h2 class="text-2xl">The MazeBall</h2>
          <p class="mt-2 pb-2">
            To deliver the best possible experience to players, I carefully designed and implemented the MazeBall. Due to its complex structure, I layered it with four distinct colliders, each serving a different role. I refined this structure through multiple iterations of playtesting and ultimately arrived at the final solution:
          </p>
          
          <li><strong>Outer Sphere</strong>: Detects interaction (HandInteractable)</li>
          <li><strong>Inner Sphere</strong>: Uses inverted normals to prevent the tiny ball inside from falling out of the MazeBall</li>
          <li><strong>Puzzles</strong>: Models with mesh colliders that allow the tiny ball to roll over them</li>
          <li><strong>Air Wall</strong>: Invisible walls that prevent the ball from falling out of bounds</li>

          <img src="https://i.ibb.co/XZ26syjy/MazeBall.gif" alt="MazeballGIF" class="rounded-lg place-self-center w-1/2 object-cover h-96">

          
          <h2 class="text-2xl">Room Rotation</h2>
          <p class="mt-2 pb-2">
            To enhance the rotational experience, I added multiple effects during transitions.
          </p>
          <p class="mt-2 pb-2">The transition system calculates the required rotation direction and smoothly lerps from the current rotation to the target. During this process, I apply global volume effects such as vignette and lens distortion by dynamically lerping the intensity values through code.</p>
          
          <div class="flex justify-center gap-4 pb-8">
            <img src="https://i.ibb.co/0j451wWQ/Transition-Effect.gif" alt="Feature Image 1" class="rounded-lg place-self-center w-1/2 object-cover h-96">
            <img src="https://i.ibb.co/spjxXZ4Z/1744839984907.png" alt="Feature Image 2" class="rounded-lg place-self-center w-1/2 object-cover h-96">
          </div>
          

          <h2 class="text-2xl">Stage Management</h2>
          <p class="mt-2 pb-2">
          Our project currently includes four levels and eight transition animations, making scene management a significant task.
          </p>
          <p class="mt-2 pb-2">I use a state machine to manage the current stage, ensuring each level's starting position is automatically configured. I also use Timeline to control object activation during transitions. To maintain immersion, I carefully adjust the screen distance and turn off lighting when necessary.</p>
          <div class="flex justify-center gap-4 pb-8">
            <img src="https://i.ibb.co/Ld5Wzbt8/1744840198046.png" alt="Feature Image 1" class="rounded-lg place-self-center w-1/2 object-cover h-96">
            <img src="https://i.ibb.co/ZpF5kxw5/1744840096818.png" alt="Feature Image 2" class="rounded-lg place-self-center w-1/2 object-cover h-96">
          </div>
          
        </div>
        
        

        <h1 class="font-bold tracking-tight mt-8 text-gray-900 dark:text-white sm:text-4xl pb-6">
        What I learn</h1>
        <div class="mx-auto text-gray-900 pb-16 px-1">
          <p class="mt-2">
            The first thing I learned is that building a VR project requires a different approach. 
            Coming from my previous AR project, where I relied heavily on <strong>hand tracking</strong>, 
            I realised its limitations in <strong>precision</strong>. Initially, I implemented hand tracking, 
            but it turned out to be unreliable and disrupted the immersion of the game. 
            It brought more frustration than the satisfaction of using real hands. Ultimately, 
            I chose to use <strong>controller-synthesised hands</strong>, which provide the illusion of hands 
            while maintaining the precision of a controller.
          </p>
          
          <p class="mt-2">
            The second major takeaway was the importance of leveraging the <strong>unique interactions</strong> 
            that <strong>VR technology</strong> offers. Our team spent a significant amount of time discussing 
            what the main interactive component of our game should be. We asked ourselves: 
            <strong>Why VR?</strong> Many game concepts can be executed without VR, but the <strong>tactile experience</strong> 
            of feeling the <strong>MazeBall</strong> and interacting with its <strong>physics</strong> using 
            real hand movements is truly unique. Moving forward, I will always consider this when 
            designing future VR projects.
          </p>
        </div>
        <div class="flex justify-center gap-4 pb-8">
          <img src="https://i.ibb.co/HTMmkHMy/20250416225641.jpg" alt="Feature Image 1" class="rounded-lg place-self-center w-1/2 object-cover h-96">
        </div>


  </main>
</Layout>

<style></style>
